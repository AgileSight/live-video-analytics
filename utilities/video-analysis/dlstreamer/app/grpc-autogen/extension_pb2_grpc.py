# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import extension_pb2 as extension__pb2


class MediaGraphExtensionStub(object):
    """
    Media Graph Extension Service

    Media graph extension service definition allows graphs to be extended through a 
    gRPC server implementation of a graph processor module.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessMediaStream = channel.stream_stream(
                '/microsoft.azure.media.graph.extensions.grpc.MediaGraphExtension/ProcessMediaStream',
                request_serializer=extension__pb2.MediaStreamMessage.SerializeToString,
                response_deserializer=extension__pb2.MediaStreamMessage.FromString,
                )


class MediaGraphExtensionServicer(object):
    """
    Media Graph Extension Service

    Media graph extension service definition allows graphs to be extended through a 
    gRPC server implementation of a graph processor module.

    """

    def ProcessMediaStream(self, request_iterator, context):
        """
        Continuously process a single media stream (audio/video)

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MediaGraphExtensionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessMediaStream': grpc.stream_stream_rpc_method_handler(
                    servicer.ProcessMediaStream,
                    request_deserializer=extension__pb2.MediaStreamMessage.FromString,
                    response_serializer=extension__pb2.MediaStreamMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'microsoft.azure.media.graph.extensions.grpc.MediaGraphExtension', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MediaGraphExtension(object):
    """
    Media Graph Extension Service

    Media graph extension service definition allows graphs to be extended through a 
    gRPC server implementation of a graph processor module.

    """

    @staticmethod
    def ProcessMediaStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/microsoft.azure.media.graph.extensions.grpc.MediaGraphExtension/ProcessMediaStream',
            extension__pb2.MediaStreamMessage.SerializeToString,
            extension__pb2.MediaStreamMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
